{"root":{"data":{"id":"cd8wbop5k4g0","created":1627894176767,"text":"PyQt","expandState":"expand"},"children":[{"data":{"id":"cd8wcpdyxg80","created":1627894256632,"text":"PyQt5.QtWidgets","layout":null,"expandState":"expand","layout_bottom_offset":{"x":594,"y":225}},"children":[{"data":{"id":"cd8wd6up88g0","created":1627894294649,"text":"QApplication","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8x3o4oghs0","created":1627896369726,"text":"创建应用：app = QApplication()","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8x3wahxnk0","created":1627896387492,"text":"关闭应用：sys.exit(app.exec_())","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd8wdd1zxiw0","created":1627894308151,"text":"QWidget","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8wzjxcr540","created":1627896047119,"text":"设置提示：obj.setToolTip('This is a widget')","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9qc5mdins0","created":1627978846902,"text":"鼠标跟踪：obj.setMouseTracking(True)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9rbn29uzs0","created":1627981627614,"text":"窗口设置","expandState":"expand","layout":null},"children":[{"data":{"id":"cd8wdi1awd40","created":1627894318993,"text":"窗口大小：obj.resize(width,height)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8wdp16t400","created":1627894334224,"text":"移动窗口：obj.move(x,y)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8we40xxf40","created":1627894366860,"text":"窗口标题：obj.setWindowTitle('Simple')","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8wusrm15c0","created":1627895674542,"text":"设置窗口图标：obj.setWindowIcon(QIcon('web.png'))","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8wv8litp40","created":1627895709003,"text":"设置窗口大小和位置：obj.setGeometry(x,y,width,height)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9hj790g800","created":1627954009008,"text":"获取窗口位置和宽高：obj.frameGeometry()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9hji259wg0","created":1627954032537,"text":"将控件中心移动到某点：obj.moveCenter(QPoint)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9hr35j5io0","created":1627954627003,"text":"获取窗口的左上角坐标：obj.topLeft()","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd8webe7a600","created":1627894382900,"text":"显示窗口：obj.show()","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9rceklv7c0","created":1627981687496,"text":"事件","expandState":"expand","layout":null},"children":[{"data":{"id":"cd8xb6vh9eo0","created":1627896959078,"text":"关闭窗口事件：closeEvent(Event)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8xdr2m22o0","created":1627897159773,"text":"可以设置点击关闭窗口按钮时，触发某事件，如确认弹框等。需要继承QWidget，并重写closeEvent()方法","layout":null,"note":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9q86f43ig0","created":1627978535183,"text":"按键事件：keyPressEvent(key)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9qa2vb0fc0","created":1627978684183,"text":"鼠标移动事件：mouseMoveEvent（pos）","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9qbuahp2w0","created":1627978822239,"text":"需要配合 obj.setMouseTracking(True)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9qfx3k28w0","created":1627979141807,"text":"事件发送者：sender = obj.sender()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9qg9zkjvk0","created":1627979169864,"text":"可以获取事件发送者","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdaj9op2sm80","created":1628060465519,"text":"画图：paintEvent","expandState":"expand"},"children":[]}]},{"data":{"id":"cdagnwwauvk0","created":1628053117139,"text":"设置布局：self.setLayout(LayoutObj)","expandState":"expand"},"children":[]}]},{"data":{"id":"cd8wvrdexjc0","created":1627895749871,"text":"QToolTip","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8wvvcp0t40","created":1627895758535,"text":"设置提示字体：QToolTip.setFont(字体对象)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd8wvy8tqy80","created":1627895764831,"text":"QPushButton","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8wxcf1z340","created":1627895874047,"text":"按钮对象：QPushButton(按钮名称, 父级控件)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cdahxkj2iu00","created":1628056694969,"text":"设置是否可以支持拖拽：obj.setAcceptDrops(True)","expandState":"expand"},"children":[]}]},{"data":{"id":"cd8wyrhxvc00","created":1627895985237,"text":"设置提示：obj.setToolTip(Tip文本)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8x02r7d9s0","created":1627896088106,"text":"设置大小：obj.resize(int,int) ","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8x0larq2w0","created":1627896128471,"text":"获取默认大小：obj.sizeHint()  # 返回按钮大小，可以传递给 resize()","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8x2m2rhaw0","created":1627896286892,"text":"移动按钮位置：obj.move(int,int)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd8x68wnl7c0","created":1627896571682,"text":"按钮事件：obj.clicked.connect(slot)  ","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8xa03f66o0","created":1627896865956,"text":"slot 可以是signal或callable\neg: 点击按钮，退出窗口程序\nbtn.clicked.connect(QCoreApplication.quit)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdahyb0loww0","created":1628056752625,"text":"拖拽事件","expandState":"expand"},"children":[{"data":{"id":"cdahydnln880","created":1628056758369,"text":"dragEnterEvent","expandState":"expand"},"children":[]},{"data":{"id":"cdahyhlxpgg0","created":1628056766976,"text":"dropEvent","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd8xemt8m1s0","created":1627897228863,"text":"QMessageBox","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8xg0p3w680","created":1627897337453,"text":"QMessageBox.question(widget,title,btns,default_btns)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8xgoiw4js0","created":1627897389320,"text":"给某widget绑定消息框，btns是消息框上的btn，最后是设置默认选中的btn","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd8xhuc30v40","created":1627897480334,"text":"QDesktopWidget","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9hlbimp4g0","created":1627954175025,"text":"获取屏幕或控件大小：obj.availableGeometry()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9hlt3skgo0","created":1627954213309,"text":"获取屏幕或控件的中心点： obj.availableGeometry().center()","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9jgwjja000","created":1627959471191,"text":"QMainWindow：继承自QWidget","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jhcgaz0g0","created":1627959505824,"text":"底部状态栏：obj.statusBar()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jhp5aads0","created":1627959533456,"text":"状态栏显示信息：obj.showMessage('Ready')","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9lmmh1tk00","created":1627965561677,"text":"隐藏状态栏：obj.hide()","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9lmyv112w0","created":1627965588644,"text":"开启状态栏：obj.show()","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9jr1cfwww0","created":1627960265287,"text":"创建菜单栏：obj.menuBar()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jrhw37y80","created":1627960301304,"text":"obj.addMenu('File')","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jrsibpi00","created":1627960324416,"text":"obj.addAction(QActionObj)","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9lpbtjfog0","created":1627965773580,"text":"右键菜单：contextMenuEvent(self, event)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9lxgw7w0o0","created":1627966411540,"text":"工具栏：obj = QMainWindow.addToolBar('Exit')","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9ly2xa6740","created":1627966459493,"text":"obj.addAction(QAction)","note":null,"layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9m110wuzk0","created":1627966690452,"text":"设置中心控件：obj.setCentralWidget(widget)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9rdaiw6wg0","created":1627981757049,"text":"窗口设置","expandState":"expand","layout":null},"children":[{"data":{"id":"cd9ji8z6rvs0","created":1627959576623,"text":"设置位置和宽高：obj.setGeometry(x,y,width,height)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9m70dcwns0","created":1627967159212,"text":"获取位置宽高：obj.frameGeometry()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9n0bdytxs0","created":1627969455755,"text":"obj.frameGeometry().moveCenter(QPoint)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9jio38bts0","created":1627959609519,"text":"设置窗口标题：obj.setWindowTitle(title)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9jivqp5tk0","created":1627959626175,"text":"显示窗口：obj.show()","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9jk78cgww0","created":1627959729551,"text":"QAction","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jkb81heo0","created":1627959738240,"text":"动作对象：obj = QAction(icon, name, parent, checkable=False)\n设置一个动作：绑定动作的icon可忽略，动作展示名称，父级对象，是否是勾选框类型","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jlpf27zc0","created":1627959847504,"text":"设置快捷键：obj.setShortcut('Ctrl+Q')","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9jmvvpkuo0","created":1627959939935,"text":"设置提示：obj.setStatusTip(tipMessage)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9jqcf9j940","created":1627960211038,"text":"设置触发动作：obj.triggered.connect(slot)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9li9n6kgg0","created":1627965220293,"text":"设置勾选框：obj.setChecked(True)","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9jyvs4fpk0","created":1627960880088,"text":"QMenu","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jzrope000","created":1627960949538,"text":"子菜单项：obj = QMenu(菜单名，父级对象）","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9k0koaby00","created":1627961012640,"text":"obj.addAction(QAction)","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9joytt7j40","created":1627960103079,"text":"qApp","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9jp8oo7aw0","created":1627960124536,"text":"退出窗口：qApp.quit()","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdagm9ljcg80","created":1628052988058,"text":"布局","expandState":"expand"},"children":[{"data":{"id":"cd9owsfi4bc0","created":1627974821616,"text":"栅格布局：QGridLayout","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9oxrsto280","created":1627974898609,"text":"grid = QGridLayout()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9oxxxh4dk0","created":1627974911951,"text":"grid.addWidget(button, *position)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9p4sgjn4o0","created":1627975448592,"text":"position代表（第几行，第几列，(横跨几行，横跨几列)）","layout":null},"children":[]}]}]}]},{"data":{"id":"cdagmjues740","created":1628053010362,"text":"竖直布局：QVBoxLayout","expandState":"expand"},"children":[{"data":{"id":"cdagmvfke2g0","created":1628053035586,"text":"vbox = QVBoxLayout(self)","expandState":"expand"},"children":[{"data":{"id":"cdagmzoa8lk0","created":1628053044820,"text":"vbox.addWidget(widget)","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdagmm7vq6w0","created":1628053015530,"text":"水平布局：QHBoxLayout","expandState":"expand"},"children":[]}]},{"data":{"id":"cdagl4b7ue80","created":1628052898186,"text":"控件","expandState":"expand"},"children":[{"data":{"id":"cdablqfo4f40","created":1628038840794,"text":"勾选框：QCheckBox","expandState":"expand"},"children":[{"data":{"id":"cdablw680rs0","created":1628038853284,"text":"cb = QCheckBox('Show title', self)","expandState":"expand"},"children":[{"data":{"id":"cdabrl0feuw0","created":1628039299174,"text":"控制选中和未选中：cb.toggle()","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdagag8tgoo0","created":1628052062156,"text":"QProgressBar","expandState":"expand"},"children":[{"data":{"id":"cdagbqll42o0","created":1628052163060,"text":"进度条：self.pbar = QProgressBar(self)","expandState":"expand"},"children":[{"data":{"id":"cdagc02nks00","created":1628052183683,"text":"设置位置：self.pbar.setGeometry(30, 40, 200, 25)","expandState":"expand"},"children":[]},{"data":{"id":"cdagfryrw2o0","created":1628052479491,"text":"设置进度条的值：self.pbar.setValue(80)","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9pqrtu2sg0","created":1627977171231,"text":"滑动条：QSlider","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9pqxtnla80","created":1627977184280,"text":"水平滑动条：sld = QSlider(Qt.Horizontal, self)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9prnw3uz40","created":1627977241025,"text":"sld.valueChanged.connect(slot)","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9oysebeag0","created":1627974978272,"text":"行文本编辑器：QLineEdit","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cdagugte7ns0","created":1628053630684,"text":"line = QLineEdit(self) ","expandState":"expand"},"children":[{"data":{"id":"cdagumv60og0","created":1628053643851,"text":"检测内容变化：line.textChanged.connect(self.onChanged)","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9ojbhydvc0","created":1627973766025,"text":"QLabel：label = QLabel('hello', self)","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9q7br4u5s0","created":1627978468430,"text":"设置label文本：label.setText(text)","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cdag52v12000","created":1628051641203,"text":"设置label图片：label.setPixmap(PixmapObj)","expandState":"expand"},"children":[]}]},{"data":{"id":"cd9m08r8wog0","created":1627966628917,"text":"QTextEdit","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9oymxknl40","created":1627974966376,"text":"文本区域框","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdahe3la4co0","created":1628055169178,"text":"下拉选项：QComboBox","expandState":"expand"},"children":[{"data":{"id":"cdahe6mctbk0","created":1628055175773,"text":"combo = QComboBox(self)","expandState":"expand"},"children":[{"data":{"id":"cdaheege3tc0","created":1628055192827,"text":"添加下拉选项：combo.addItem(\"Ubuntu\")","expandState":"expand"},"children":[]},{"data":{"id":"cdahel9xfds0","created":1628055207674,"text":"触发事件：combo.activated[str].connect(self.onActivated)","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9pq3fkvtc0","created":1627977118126,"text":"QLCDNumber()","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9pqdv744o0","created":1627977140838,"text":"lcd = QLCDNumber(self)","expandState":"expand","layout":null},"children":[{"data":{"id":"cd9pqgdp49k0","created":1627977146310,"text":"类似LCD液晶屏的数字显示","layout":null,"expandState":"expand"},"children":[]}]}]}]},{"data":{"id":"cdaglan6v7s0","created":1628052911970,"text":"对话框","expandState":"expand"},"children":[{"data":{"id":"cd9rupgocqw0","created":1627983121758,"text":"QColorDialog：选取颜色对话框","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9rur8vpfk0","created":1627983125640,"text":"QColorDialog.getColor()","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9s0li1c9k0","created":1627983583318,"text":"QFontDialog","expandState":"expand"},"children":[]},{"data":{"id":"cd9rhzr246o0","created":1627982125419,"text":"QInputDialog：输入对话框","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9ric2to4g0","created":1627982152252,"text":"QInputDialog.getText(父级对象，标题，提示信息)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9s0uo1oc80","created":1627983603272,"text":"QFileDialog：文件对话框","expandState":"expand"},"children":[{"data":{"id":"cd9s4we4mg80","created":1627983920483,"text":"fname = QFileDialog.getOpenFileName(self, 'Open file', 'C:\\\\')","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdah6a9bnv40","created":1628054556779,"text":"QFrame","expandState":"expand"},"children":[{"data":{"id":"cdah6djcnio0","created":1628054563916,"text":"继承自QWidget","expandState":"expand"},"children":[]},{"data":{"id":"cdah7hkt2rs0","created":1628054651075,"text":"frame = QFrame(parent)","expandState":"expand"},"children":[{"data":{"id":"cdah7p9603c0","created":1628054667786,"text":"设置默认格式：frame.setFrameShape(QFrame.StyledPanel)","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdah88ku0400","created":1628054709850,"text":"QSplitter","expandState":"expand"},"children":[{"data":{"id":"cdah89myfvs0","created":1628054712155,"text":"继承自QFrame","expandState":"expand"},"children":[]},{"data":{"id":"cdah8fuents0","created":1628054725666,"text":"创建水平分割：splitter1 = QSplitter(Qt.Horizontal)","expandState":"expand"},"children":[{"data":{"id":"cdah910s65s0","created":1628054771764,"text":"splitter1.addWidget(widget)","expandState":"expand"},"children":[]}]}]}]},{"data":{"id":"cd8wu40qfs80","created":1627895620674,"text":"PyQt5.QtGui","layout":null,"layout_bottom_offset":{"x":92,"y":42},"expandState":"expand"},"children":[{"data":{"id":"cd8wu6flv1c0","created":1627895625927,"text":"QIcon","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8wuc262u00","created":1627895638175,"text":"Icon对象：QIcon('web.png')","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd8ww86ouqg0","created":1627895786470,"text":"QFont","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8wwebo5a80","created":1627895799832,"text":"字体对象：QFont('SansSerif', 10)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdag5uhu09c0","created":1628051701355,"text":"QPixmap","expandState":"expand"},"children":[{"data":{"id":"cdag5xbphtk0","created":1628051707515,"text":"图像表示: QPixmap(\"main.png\")","expandState":"expand"},"children":[]}]},{"data":{"id":"cdaj9cwmuw00","created":1628060439855,"text":"QPainter：绘图","expandState":"expand"},"children":[{"data":{"id":"cdaj9dw9vh40","created":1628060442010,"text":"qp = QPainter()","expandState":"expand"},"children":[{"data":{"id":"cdajd9lqqv40","created":1628060746122,"text":"qp.begin()","expandState":"expand"},"children":[]},{"data":{"id":"cdajdkceq200","created":1628060769503,"text":"qp.drawText()","expandState":"expand"},"children":[]},{"data":{"id":"cdajdkceq200","created":1628060769503,"text":"qp.drawPoints()","expandState":"expand"},"children":[]},{"data":{"id":"cdajde02ayo0","created":1628060755695,"text":"qp.end()","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdajxxyxeaw0","created":1628062366446,"text":"QBrush：笔刷","expandState":"expand"},"children":[]}]},{"data":{"id":"cd8x4ke1vyw0","created":1627896439950,"text":"PyQt5.QtCore","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8x4mubb5c0","created":1627896445287,"text":"QCoreApplication","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd8x90upncg0","created":1627896789242,"text":"退出：quit()","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cd9oo9m93340","created":1627974153752,"text":"布局方式","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9oocb95740","created":1627974159617,"text":"绝对定位，不会随窗口缩放变化","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9oojytvmo0","created":1627974176280,"text":"常见的 move()，如: btn.move(30,20)","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9op5wyrj40","created":1627974224057,"text":"盒布局，可以将布局分为横着的和竖着的模块","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9oukcfk2o0","created":1627974647288,"text":"栅格布局","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9o1uy61740","created":1627972397809,"text":"实例","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cdabmicx1eo0","created":1628038901578,"text":"控件","expandState":"expand"},"children":[{"data":{"id":"cdaboua8tx40","created":1628039084266,"text":"勾选按钮","expandState":"expand"},"children":[{"data":{"id":"cdabp2dl2oo0","created":1628039101882,"text":" ","note":"~~~python\n\nfrom PyQt5.QtWidgets import QWidget, QCheckBox, QApplication\nfrom PyQt5.QtCore import Qt\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):      \n\n        cb = QCheckBox('Show title', self)\n        cb.move(20, 20)\n        cb.toggle()\n        cb.stateChanged.connect(self.changeTitle)\n\n        self.setGeometry(300, 300, 250, 150)\n        self.setWindowTitle('QCheckBox')\n        self.show()\n\n\n    def changeTitle(self, state):\n\n        if state == Qt.Checked:\n            self.setWindowTitle('QCheckBox')\n        else:\n            self.setWindowTitle(' ')\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdabyi95rkw0","created":1628039841721,"text":"切换按钮","expandState":"expand"},"children":[{"data":{"id":"cdac1lwv5cw0","created":1628040084777,"text":"","note":"~~~python\n\nfrom PyQt5.QtWidgets import (QWidget, QPushButton,\n    QFrame, QApplication)\nfrom PyQt5.QtGui import QColor\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 颜色对象\n        self.col = QColor(0, 0, 0)\n        # red 按钮\n        redb = QPushButton('Red', self)\n        redb.setCheckable(True)\n        redb.move(10, 10)\n\n        # 设置点击时的事件\n        redb.clicked[bool].connect(self.setColor)\n\n        greenb = QPushButton('Green', self)\n        greenb.setCheckable(True)\n        greenb.move(10, 60)\n\n        greenb.clicked[bool].connect(self.setColor)\n\n        blueb = QPushButton('Blue', self)\n        blueb.setCheckable(True)\n        blueb.move(10, 110)\n\n        blueb.clicked[bool].connect(self.setColor)\n\n        # 颜色区域\n        self.square = QFrame(self)\n        self.square.setGeometry(150, 20, 100, 100)\n        self.square.setStyleSheet(\"QWidget { background-color: %s }\" % self.col.name())\n\n        self.setGeometry(300, 300, 280, 170)\n        self.setWindowTitle('Toggle button')\n        self.show()\n\n\n    def setColor(self, pressed):\n\n        source = self.sender()\n\n        if pressed:\n            val = 255\n        else:\n            val = 0\n\n        if source.text() == \"Red\":\n            self.col.setRed(val)\n        elif source.text() == \"Green\":\n            self.col.setGreen(val)\n        else:\n            self.col.setBlue(val)\n\n        self.square.setStyleSheet(\"QFrame { background-color: %s }\" % self.col.name())\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdag974gpns0","created":1628051963939,"text":"滑动条","expandState":"expand"},"children":[{"data":{"id":"cdag9k6urc80","created":1628051992380,"text":" ","note":"~~~python\n\nfrom PyQt5.QtWidgets import (QWidget, QSlider, \n    QLabel, QApplication)\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtGui import QPixmap\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):      \n\n        sld = QSlider(Qt.Horizontal, self)  # 水平滑动条\n        sld.setFocusPolicy(Qt.NoFocus)  # 设置焦点\n        sld.setGeometry(30, 40, 100, 30)\n        sld.valueChanged[int].connect(self.changeValue)  # 绑定事件\n\n        self.label = QLabel(self)\n        self.label.setPixmap(QPixmap('mute.png'))  # 给 label 设置图片\n        self.label.setGeometry(160, 40, 80, 30)\n\n        self.setGeometry(300, 300, 280, 170)\n        self.setWindowTitle('QSlider')\n        self.show()\n\n\n    def changeValue(self, value):\n        # 随着值的改变，改变 label 显示的图片\n        if value == 0:\n            self.label.setPixmap(QPixmap('test1.png'))\n        elif value > 0 and value <= 30:\n            self.label.setPixmap(QPixmap('test1.png'))\n        elif value > 30 and value < 80:\n            self.label.setPixmap(QPixmap('med.png'))\n        else:\n            self.label.setPixmap(QPixmap('max.png'))\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdaghlygvg80","created":1628052623140,"text":"进度条","expandState":"expand"},"children":[{"data":{"id":"cdaghnby3vk0","created":1628052626132,"text":"","note":"~~~python\nfrom PyQt5.QtWidgets import (QWidget, QProgressBar,\n    QPushButton, QApplication)\nfrom PyQt5.QtCore import QBasicTimer\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n\n    def initUI(self):\n        # 创建进度条，设置位置和宽高\n        self.pbar = QProgressBar(self)\n        self.pbar.setGeometry(30, 40, 200, 25)\n\n        self.btn = QPushButton('Start', self)\n        self.btn.move(40, 80)\n        self.btn.clicked.connect(self.doAction)\n\n        self.timer = QBasicTimer()\n        self.step = 0\n\n        self.setGeometry(300, 300, 280, 170)\n        self.setWindowTitle('QProgressBar')\n        self.show()\n\n\n    def timerEvent(self, e):\n\n        if self.step >= 100:\n            self.timer.stop()\n            self.btn.setText('Finished')\n            return\n\n        self.step = self.step + 1\n        self.pbar.setValue(self.step)\n\n\n    def doAction(self):\n        # 点击按钮，会停止或启动计时器\n        if self.timer.isActive():\n            self.timer.stop()\n            self.btn.setText('Start')\n        else:\n            self.timer.start(100, self)\n            self.btn.setText('Stop')\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdagoaht8m00","created":1628053146738,"text":"日历","expandState":"expand"},"children":[{"data":{"id":"cdagockr1ls0","created":1628053151269,"text":"","note":"~~~python\n\nfrom PyQt5.QtWidgets import (QWidget, QCalendarWidget,\n    QLabel, QApplication, QVBoxLayout)\nfrom PyQt5.QtCore import QDate\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 竖直布局\n        vbox = QVBoxLayout(self)\n\n        # 日历控件，设置可见，设置事件\n        cal = QCalendarWidget(self)\n        cal.setGridVisible(True)\n        cal.clicked[QDate].connect(self.showDate)\n\n        # 添加进布局\n        vbox.addWidget(cal)\n\n        self.lbl = QLabel(self)\n        date = cal.selectedDate()\n        self.lbl.setText(date.toString())\n\n        vbox.addWidget(self.lbl)\n\n        self.setLayout(vbox)\n\n        self.setGeometry(300, 300, 350, 300)\n        self.setWindowTitle('Calendar')\n        self.show()\n\n\n    def showDate(self, date):\n        # 设置 label 的文本\n        self.lbl.setText(date.toString())\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdagqer5iog0","created":1628053312738,"text":"图片：QPixmap","expandState":"expand"},"children":[{"data":{"id":"cdagqjaho480","created":1628053322614,"text":"","note":"~~~python\nfrom PyQt5.QtWidgets import (QWidget, QHBoxLayout,\n    QLabel, QApplication)\nfrom PyQt5.QtGui import QPixmap\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        hbox = QHBoxLayout(self)\n        # 图片对象\n        pixmap = QPixmap(\"test1.png\")\n        \n        # label 可以设置成图片\n        lbl = QLabel(self)\n        lbl.setPixmap(pixmap)\n\n        hbox.addWidget(lbl)\n        self.setLayout(hbox)\n\n        self.move(300, 200)\n        self.setWindowTitle('Red Rock')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdagv38eoww0","created":1628053679481,"text":"行编辑器","expandState":"expand"},"children":[{"data":{"id":"cdagv78ssg80","created":1628053688211,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import (QWidget, QLabel,\n    QLineEdit, QApplication)\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        self.lbl = QLabel(self)\n        line = QLineEdit(self)  # 行编辑器\n\n        line.move(60, 100)\n        self.lbl.move(60, 40)\n\n        line.textChanged.connect(self.onChanged)  # 编辑器值发生变化触发:onChanged\n\n        self.setGeometry(300, 300, 280, 170)\n        self.setWindowTitle('QLineEdit')\n        self.show()\n\n\n    def onChanged(self, text):\n        # 设置 label 文本\n        self.lbl.setText(text)\n        self.lbl.adjustSize()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdahaqgqmqg0","created":1628054905513,"text":"QFrame,QSplitter","expandState":"expand"},"children":[{"data":{"id":"cdahau3l99c0","created":1628054913425,"text":" ","note":"~~~python\n\nfrom PyQt5.QtWidgets import (QWidget, QHBoxLayout, QFrame,\n    QSplitter, QPushButton, QApplication)\nfrom PyQt5.QtCore import Qt\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        hbox = QHBoxLayout(self)  # 水平布局\n\n        # 声明一个框架，并添加一个按钮\n        topleft = QFrame(self)\n        btn = QPushButton(\"ON\",parent=topleft)\n        btn.move(3,3)\n        topleft.setFrameShape(QFrame.StyledPanel)\n\n        topright = QFrame(self)\n        topright.setFrameShape(QFrame.StyledPanel)\n\n        bottom = QFrame(self)\n        bottom.setFrameShape(QFrame.StyledPanel)\n        bottom.resize(50,300)\n\n        # 创建分割,并在水平方向添加两个框架\n        splitter1 = QSplitter(Qt.Horizontal)\n        splitter1.addWidget(topleft)\n        splitter1.addWidget(topright)\n        splitter1.resize(50,300)\n        # 竖直方向 添加两个内容\n        splitter2 = QSplitter(Qt.Vertical)\n        splitter2.addWidget(splitter1)\n        splitter2.addWidget(bottom)\n\n        hbox.addWidget(splitter2)\n        self.setLayout(hbox)\n\n        self.setGeometry(300, 300, 300, 200)\n        self.setWindowTitle('QSplitter')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdahfdugl1s0","created":1628055269865,"text":"下拉选项","expandState":"expand"},"children":[{"data":{"id":"cdahffq516o0","created":1628055273957,"text":" ","note":"~~~python\n\n\nfrom PyQt5.QtWidgets import (QWidget, QLabel,\n    QComboBox, QApplication)\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.lbl = QLabel(\"Ubuntu\", self)\n\n        # 创建下拉选框，并添加几个选项\n        combo = QComboBox(self)\n        combo.addItem(\"Ubuntu\")\n        combo.addItem(\"Mandriva\")\n        combo.addItem(\"Fedora\")\n        combo.addItem(\"Arch\")\n        combo.addItem(\"Gentoo\")\n\n        combo.move(50, 50)\n        self.lbl.move(50, 150)\n\n        # 选择项目时触发 onActivated 方法\n        combo.activated[str].connect(self.onActivated)\n\n        self.setGeometry(300, 300, 300, 200)\n        self.setWindowTitle('QComboBox')\n        self.show()\n\n    def onActivated(self, text):\n        self.lbl.setText(text)\n        self.lbl.adjustSize()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdaj8vu4br40","created":1628060402697,"text":"自定义控件","expandState":"expand"},"children":[{"data":{"id":"cdaj8xyaaxk0","created":1628060407303,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial\n\nIn this example, we create a custom widget.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com\nLast edited: August 2017\n\"\"\"\n\nfrom PyQt5.QtWidgets import (QWidget, QSlider, QApplication,\n    QHBoxLayout, QVBoxLayout)\nfrom PyQt5.QtCore import QObject, Qt, pyqtSignal\nfrom PyQt5.QtGui import QPainter, QFont, QColor, QPen\nimport sys\n\nclass Communicate(QObject):\n    \"\"\"自定义一个信号\"\"\"\n    updateBW = pyqtSignal(int)\n\n\nclass BurningWidget(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        self.setMinimumSize(1, 30)\n        self.value = 75\n        self.num = [75, 150, 225, 300, 375, 450, 525, 600, 675]\n\n\n    def setValue(self, value):\n        self.value = value\n\n    # 绘图方法，放在begin() end()之间\n    def paintEvent(self, e):\n\n        qp = QPainter()\n        qp.begin(self)\n        self.drawWidget(qp)\n        qp.end()\n\n\n    def drawWidget(self, qp):\n\n        MAX_CAPACITY = 700\n        OVER_CAPACITY = 750\n\n        font = QFont('Serif', 7, QFont.Light)\n        qp.setFont(font)\n\n        size = self.size()\n        w = size.width()\n        h = size.height()\n\n        step = int(round(w / 10))\n\n        till = int(((w / OVER_CAPACITY) * self.value))\n        full = int(((w / OVER_CAPACITY) * MAX_CAPACITY))\n\n        if self.value >= MAX_CAPACITY:\n\n            qp.setPen(QColor(255, 255, 255))\n            qp.setBrush(QColor(255, 255, 184))\n            qp.drawRect(0, 0, full, h)\n            qp.setPen(QColor(255, 175, 175))\n            qp.setBrush(QColor(255, 175, 175))\n            qp.drawRect(full, 0, till-full, h)\n\n        else:\n\n            qp.setPen(QColor(255, 255, 255))\n            qp.setBrush(QColor(255, 255, 184))\n            qp.drawRect(0, 0, till, h)\n\n\n        pen = QPen(QColor(20, 20, 20), 1,\n            Qt.SolidLine)\n\n        qp.setPen(pen)\n        qp.setBrush(Qt.NoBrush)\n        qp.drawRect(0, 0, w-1, h-1)\n\n        j = 0\n\n        for i in range(step, 10*step, step):\n\n            qp.drawLine(i, 0, i, 5)\n            metrics = qp.fontMetrics()\n            fw = metrics.width(str(self.num[j]))\n            qp.drawText(i-fw/2, h/2, str(self.num[j]))\n            j = j + 1\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        OVER_CAPACITY = 750\n        # 创建滑块，设置滑块范围和值，设置滑块位置和宽高\n        sld = QSlider(Qt.Horizontal, self)\n        sld.setFocusPolicy(Qt.NoFocus)\n        sld.setRange(1, OVER_CAPACITY)\n        sld.setValue(75)\n        sld.setGeometry(30, 40, 150, 30)\n\n        self.c = Communicate()\n        self.wid = BurningWidget()\n        self.c.updateBW[int].connect(self.wid.setValue)  # updateBW 跟 wid的setValue 挂钩\n\n        sld.valueChanged[int].connect(self.changeValue)  # 滑块的值跟本身的 changeValue 方法绑定\n        hbox = QHBoxLayout()\n        hbox.addWidget(self.wid)\n        vbox = QVBoxLayout()\n        vbox.addStretch(1)  # 添加一些间隙\n        vbox.addLayout(hbox)\n        self.setLayout(vbox)\n\n        self.setGeometry(300, 300, 390, 210)\n        self.setWindowTitle('Burning widget')\n        self.show()\n\n    # 一旦滑块的值变化，让 c.updateBW信号发出去\n    def changeValue(self, value):\n        self.c.updateBW.emit(value)  # 发出信号，会通知给 wid.setValue\n        self.wid.repaint()  # wid 重新绘制图形\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdabmurkuxc0","created":1628038928586,"text":"布局","expandState":"expand"},"children":[{"data":{"id":"cd9otcd5aw00","created":1627974551552,"text":"盒布局","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9otf1zmgw0","created":1627974557408,"text":" ","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial\n\nIn this example, we position two push\nbuttons in the bottom-right corner\nof the window.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com\nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import (QWidget, QPushButton,\n    QHBoxLayout, QVBoxLayout, QApplication)\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        okButton = QPushButton(\"OK\")\n        cancelButton = QPushButton(\"Cancel\")\n        # 两个水平布局\n        hbox = QHBoxLayout()\n        hbox2 = QHBoxLayout()\n        # 增加一点间隙弹性\n        hbox.addStretch(1)\n        hbox.addWidget(okButton)\n        # 将按钮放进布局中\n        hbox2.addWidget(cancelButton)\n        # 竖直布局，并把水平布局放到里面\n        vbox = QVBoxLayout()\n        vbox.addStretch(1)\n        vbox.addLayout(hbox)\n        vbox.addLayout(hbox2)\n\n        self.setLayout(vbox)\n\n        self.setGeometry(300, 300, 300, 150)\n        self.setWindowTitle('Buttons')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9ow8oqnyo0","created":1627974778639,"text":"栅格布局","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9owcbc4p40","created":1627974786535,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import (QWidget, QGridLayout,\n    QPushButton, QApplication)\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        grid = QGridLayout()\n        self.setLayout(grid)\n\n        names = ['Cls', 'Bck', '', 'Close',\n                 '7', '8', '9', '/',\n                '4', '5', '6', '*',\n                 '1', '2', '3', '-',\n                '0', '.', '=', '+']\n\n        positions = [(i,j) for i in range(5) for j in range(4)]\n\n        for position, name in zip(positions, names):\n\n            if name == '':\n                continue\n            button = QPushButton(name)\n            grid.addWidget(button, *position)\n\n        self.move(300, 150)\n        self.setWindowTitle('Calculator')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]},{"data":{"id":"cd9p5ih0gfs0","created":1627975505217,"text":"横跨行列","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9p5n0snpc0","created":1627975515120,"text":" ","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import (QWidget, QLabel, QLineEdit,\n    QTextEdit, QGridLayout, QApplication)\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        title = QLabel('Title')\n        author = QLabel('Author')\n        review = QLabel('Review')\n\n        titleEdit = QLineEdit()\n        authorEdit = QLineEdit()\n        reviewEdit = QTextEdit()\n\n        grid = QGridLayout()\n        grid.setSpacing(10)  # 设置格子的间距\n\n        grid.addWidget(title, 0, 0)  # title，位于 0行 0列\n        grid.addWidget(titleEdit, 0, 1)  # 编辑区域，位于 0行 1列\n\n        grid.addWidget(author, 1, 0)  # 1行 0列\n        grid.addWidget(authorEdit, 1, 1)  # 1行 1列\n\n        grid.addWidget(review, 2, 0)\n        grid.addWidget(reviewEdit, 2, 1, 5,1)  # 2行 1列，横跨 5行，横跨 1列\n\n        self.setLayout(grid)\n\n        self.setGeometry(300, 300, 350, 300)\n        self.setWindowTitle('Review')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]}]}]},{"data":{"id":"cdabn66ngi00","created":1628038953442,"text":"对话框","expandState":"expand"},"children":[{"data":{"id":"cd9rjwxd1200","created":1627982275998,"text":"消息对话框","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9rjz6qdio0","created":1627982280919,"text":"","note":"~~~python\n\nfrom PyQt5.QtWidgets import (QWidget, QPushButton, QLineEdit,\n    QInputDialog, QApplication)\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n\n        self.btn = QPushButton('Dialog', self)\n        self.btn.move(20, 20)\n        # 绑定 showDialog ,用户点击按钮，会触发事件\n        self.btn.clicked.connect(self.showDialog)\n\n        self.le = QLineEdit(self)\n        self.le.move(130, 22)\n\n        self.setGeometry(300, 300, 290, 150)\n        self.setWindowTitle('Input dialog')\n        self.show()\n\n\n    def showDialog(self):\n        # 对话框： (父级对象，标题，提示信息)，返回信息和bool\n        text, ok = QInputDialog.getText(self, 'Input Dialog',\n            'Enter your name:')\n        # 如果True，说明用户确认了输入\n        if ok:\n            self.le.setText(str(text))\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9rvrgwghk0","created":1627983204489,"text":"颜色对话框","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9rvu8sw280","created":1627983210530,"text":" ","note":"~~~python\n\nfrom PyQt5.QtWidgets import QWidget, QPushButton, QFrame,QColorDialog, QApplication\nfrom PyQt5.QtGui import QColor\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 颜色对象\n        col = QColor(0, 0, 0)\n\n        self.btn = QPushButton('select Color', self)\n        self.btn.move(20, 20)\n\n        # 绑定事件\n        self.btn.clicked.connect(self.showDialog)\n\n        self.frm = QFrame(self)\n        # 设置样式：字符串\n        self.frm.setStyleSheet(\"QWidget { background-color: %s }\" % col.name())\n        self.frm.setGeometry(130, 22, 100, 100)\n\n        self.setGeometry(300, 300, 250, 180)\n        self.setWindowTitle('Color dialog')\n        self.show()\n\n\n    def showDialog(self):\n        # 颜色选择框\n        col = QColorDialog.getColor()\n\n        if col.isValid():\n            self.frm.setStyleSheet(\"QWidget { background-color: %s }\" % col.name())\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9rzyj3a2g0","created":1627983533316,"text":"选择字体对话框","expandState":"expand"},"children":[{"data":{"id":"cd9s03skleg0","created":1627983544773,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial \n\nIn this example, we select a font name\nand change the font of a label. \n\nAuthor: Jan Bodnar\nWebsite: zetcode.com \nLast edited: August 2017\n\"\"\"\n\nfrom PyQt5.QtWidgets import (QWidget, QVBoxLayout, QPushButton, \n    QSizePolicy, QLabel, QFontDialog, QApplication)\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):      \n\n        vbox = QVBoxLayout()\n\n        btn = QPushButton('Dialog', self)\n        btn.setSizePolicy(QSizePolicy.Fixed,\n            QSizePolicy.Fixed)\n\n        btn.move(20, 20)\n\n        vbox.addWidget(btn)\n\n        btn.clicked.connect(self.showDialog)\n\n        self.lbl = QLabel('Knowledge only matters', self)\n        self.lbl.move(130, 20)\n\n        vbox.addWidget(self.lbl)\n        self.setLayout(vbox)          \n\n        self.setGeometry(300, 300, 250, 180)\n        self.setWindowTitle('Font dialog')\n        self.show()\n\n\n    def showDialog(self):\n\n        font, ok = QFontDialog.getFont()\n        if ok:\n            self.lbl.setFont(font)\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cd9s4ids46o0","created":1627983889987,"text":"文件选择对话框","expandState":"expand"},"children":[{"data":{"id":"cd9s4l700080","created":1627983896107,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial\n\nIn this example, we select a file with a\nQFileDialog and display its contents\nin a QTextEdit.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com\nLast edited: August 2017\n\"\"\"\n\nfrom PyQt5.QtWidgets import (QMainWindow, QTextEdit,\n    QAction, QFileDialog, QApplication)\nfrom PyQt5.QtGui import QIcon\nimport sys\n\nclass Example(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 设置一个文本区\n        self.textEdit = QTextEdit()\n        self.setCentralWidget(self.textEdit)\n\n        self.statusBar()\n        # 设置动作，快捷键，提示，并绑定事件\n        openFile = QAction(QIcon('test1.png'), 'Open', self)\n        openFile.setShortcut('Ctrl+O')\n        openFile.setStatusTip('Open new File')\n        openFile.triggered.connect(self.showDialog)\n        # 菜单栏\n        menubar = self.menuBar()\n        fileMenu = menubar.addMenu('File')\n        fileMenu.addAction(openFile)\n\n        self.setGeometry(300, 300, 350, 300)\n        self.setWindowTitle('File dialog')\n        self.show()\n\n\n    def showDialog(self):\n        # (父级窗口，标题，默认路径)\n        fname = QFileDialog.getOpenFileName(self, 'Open files', 'C:\\\\')\n        if fname[0]:\n            f = open(fname[0], 'r')\n            with f:\n                data = f.read()\n                self.textEdit.setText(data)\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdabnn53jjs0","created":1628038990353,"text":"事件信号","expandState":"expand"},"children":[{"data":{"id":"cd9qhstxzj40","created":1627979289246,"text":"事件发送者","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9qhvhq1gg0","created":1627979295038,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial\n\nIn this example, we determine the event sender\nobject.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com\nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import QMainWindow, QPushButton, QApplication\n\n\nclass Example(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        btn1 = QPushButton(\"Button 1\", self)\n        btn1.move(30, 50)\n\n        btn2 = QPushButton(\"Button 2\", self)\n        btn2.move(150, 50)\n        # btn1,btn2将会是事件发送者， connect()方法将 事件 发送给接受者：self.buttonClicked\n        btn1.clicked.connect(self.buttonClicked)\n        btn2.clicked.connect(self.buttonClicked)\n\n        self.statusBar()\n\n        self.setGeometry(300, 300, 290, 150)\n        self.setWindowTitle('Event sender')\n        self.show()\n\n\n    def buttonClicked(self):\n        # 获取事件发送者\n        sender = self.sender()\n        self.statusBar().showMessage(sender.text() + ' was pressed')\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9r9upl0z40","created":1627981487533,"text":"信号","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9r9wlihw80","created":1627981491640,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtCore import pyqtSignal, QObject\nfrom PyQt5.QtWidgets import QMainWindow, QApplication\n\n\nclass Communicate(QObject):\n    closeApp = pyqtSignal()\n\n\nclass Example(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.c = Communicate()\n        self.c.closeApp.connect(self.close)\n\n        self.setGeometry(300, 300, 290, 150)\n        self.setWindowTitle('Emit signal')\n        self.show()\n\n    def mousePressEvent(self, event):\n        self.c.closeApp.emit()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cdabjtlkl5s0","created":1628038690953,"text":"关闭窗口事件","expandState":"expand"},"children":[{"data":{"id":"cdabjxkh8j40","created":1628038699594,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import QMainWindow, QTextEdit, QAction, QApplication,QDesktopWidget,QPushButton,QMessageBox\nfrom PyQt5.QtCore import QCoreApplication\nfrom PyQt5.QtGui import QIcon\n\nclass Example(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.resize(800,900)\n        btn = QPushButton(text=\"start\",parent=self)\n        btn.move(20,20)\n        btn.clicked.connect(QCoreApplication.quit)\n        self.show()\n\n    def closeEvent(self, event) -> None:\n        re = QMessageBox.question(self,\"msg\",\"Are your want to close?\",QMessageBox.Yes|QMessageBox.Cancel,QMessageBox.Cancel)\n        if re == QMessageBox.Cancel:\n            event.ignore()\n        else:\n            event.accept()\n\nif __name__ == \"__main__\":\n    app = QApplication(sys.argv)\n    exam = Example()\n    sys.exit(app.exec_())\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cd9q4r7q0i00","created":1627978266992,"text":"按键事件","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9q4uw3bkw0","created":1627978274996,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtWidgets import QWidget, QApplication\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):      \n\n        self.setGeometry(300, 300, 250, 150)\n        self.setWindowTitle('Event handler')\n        self.show()\n\n\n    def keyPressEvent(self, e):\n\n        if e.key() == Qt.Key_Escape:\n            self.close()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9qaiflo9k0","created":1627978718062,"text":"鼠标移动事件","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9qap2u1b40","created":1627978732528,"text":"","note":"~~~python\n\n\nimport sys\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtWidgets import QWidget, QApplication, QGridLayout, QLabel\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):      \n\n        grid = QGridLayout()\n        grid.setSpacing(10)\n\n        x = 0\n        y = 0\n\n        self.text = \"x: {0},  y: {1}\".format(x, y)\n\n        self.label = QLabel(self.text, self)\n        grid.addWidget(self.label, 0, 0, Qt.AlignTop)\n\n        self.setMouseTracking(True)\n\n        self.setLayout(grid)\n\n        self.setGeometry(300, 300, 350, 200)\n        self.setWindowTitle('Event object')\n        self.show()\n\n\n    def mouseMoveEvent(self, e):\n\n        x = e.x()\n        y = e.y()\n\n        text = \"x: {0},  y: {1}\".format(x, y)\n        self.label.setText(text)\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9q3lr62e80","created":1627978176743,"text":"slot","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9q3o7621c0","created":1627978182064,"text":"","note":"~~~python\n\nimport sys\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtWidgets import (QWidget, QLCDNumber, QSlider,\n    QVBoxLayout, QApplication)\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 一个类似 LCD的数字\n        lcd = QLCDNumber(self)\n        # 一个滑动条\n        sld = QSlider(Qt.Horizontal, self)\n        # 添加到布局\n        vbox = QVBoxLayout()\n        vbox.addWidget(lcd)\n        vbox.addWidget(sld)\n\n        self.setLayout(vbox)\n        # 值改变时，lcd的显示数字也跟着变\n        # 1. 滑动条值改变  2. 通过 slot 传递给 lcd.display  3. lcd跟着变化\n        sld.valueChanged.connect(lcd.display)\n\n        self.setGeometry(300, 300, 250, 150)\n        self.setWindowTitle('Signal and slot')\n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdabog50kps0","created":1628039053475,"text":"窗口相关","expandState":"expand"},"children":[{"data":{"id":"cd9o27lp8000","created":1627972425353,"text":"工具栏，菜单栏，状态栏，按钮","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9o2jexh400","created":1627972451065,"text":" ","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import QMainWindow, QAction, QApplication,QPushButton,QMessageBox,QMenu\nfrom PyQt5.QtCore import QCoreApplication\nfrom PyQt5.QtGui import QIcon\n\nclass Example(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        # 添加 button\n        btn = QPushButton(text=\"exit\",parent=self)\n        btn.move(700,800)\n        btn.clicked.connect(QCoreApplication.quit)\n        \n        # 状态栏\n        self.statusBar().showMessage(\"status.\")\n        \n        # 菜单栏\n        menubar = self.menuBar()\n        fileMenu = menubar.addMenu('File')\n        fileMenu.addMenu(QMenu(\"load\",self))  # QMenu对象，通常会有二级菜单\n        fileMenu.addAction(QAction(\"load2\",self))  # Action不会有二级菜单\n\n        exitAct = QAction(QIcon('test1.png'), 'Exit', self)\n        exitAct.setShortcut('Ctrl+Q')  # 添加快捷键\n        exitAct.triggered.connect(QCoreApplication.quit)\n        \n        # 工具栏\n        self.toolbar = self.addToolBar('Exit')\n        self.toolbar.addAction(exitAct)  # 不加个带有Icon的action，无法显示工具栏图标\n\n        self.resize(800, 900)\n        self.setWindowTitle(\"Test\")\n        self.show()\n\n\nif __name__ == \"__main__\":\n    app = QApplication(sys.argv)\n    exam = Example()\n    sys.exit(app.exec_())\n~~~","layout_left_offset":{"x":-17,"y":6},"layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9o9ocsjm80","created":1627973010369,"text":"右键菜单","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9o9q7gsnc0","created":1627973014401,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial \n\nThis program creates a context menu.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com \nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import QMainWindow, qApp, QMenu, QApplication\n\nclass Example(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):         \n\n        self.setGeometry(300, 300, 300, 200)\n        self.setWindowTitle('Context menu')    \n        self.show()\n\n\n    def contextMenuEvent(self, event):\n\n           cmenu = QMenu(self)\n\n           newAct = cmenu.addAction(\"New\")\n           opnAct = cmenu.addAction(\"Open\")\n           quitAct = cmenu.addAction(\"Quit\")\n           # mapToGlobal可以将全局坐标转换成窗口相对坐标。event.pos()获取当前鼠标位置\n           action = cmenu.exec_(self.mapToGlobal(event.pos()))\n\n           if action == quitAct:\n               qApp.quit()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9o9cco6rs0","created":1627972984240,"text":"子菜单","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9o9ejsnfk0","created":1627972989025,"text":"","note":"~~~python\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial \n\nThis program creates a submenu.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com \nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import QMainWindow, QAction, QMenu, QApplication\n\nclass Example(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):         \n\n        menubar = self.menuBar()\n        # 菜单栏添加一级菜单\n        fileMenu = menubar.addMenu('File')\n        # 这是二级菜单，并给二级菜单添加一个子选项，也就是Action\n        impMenu = QMenu('Import', self)\n        impAct = QAction('Import mail', self) \n        impMenu.addAction(impAct)\n\n        newAct = QAction('New', self)        \n\n        fileMenu.addAction(newAct)\n        fileMenu.addMenu(impMenu)\n\n        self.setGeometry(300, 300, 300, 200)\n        self.setWindowTitle('Submenu')    \n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9o4bqxoe80","created":1627972591105,"text":"消息弹窗","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9o4gwfshk0","created":1627972602322,"text":" ","note":"~~~python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial \n\nThis program shows a confirmation \nmessage box when we click on the close\nbutton of the application window. \n\nAuthor: Jan Bodnar\nWebsite: zetcode.com \nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import QWidget, QMessageBox, QApplication\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):               \n\n        self.setGeometry(300, 300, 250, 150)        \n        self.setWindowTitle('Message box')    \n        self.show()\n\n\n    def closeEvent(self, event):\n        # （父级对象，消息标题，消息内容，消息框按钮，默认选中的按钮）\n        reply = QMessageBox.question(self, 'Message',\n            \"Are you sure to quit?\", QMessageBox.Yes | \n            QMessageBox.No, QMessageBox.No)\n\n        if reply == QMessageBox.Yes:\n            event.accept()\n        else:\n            event.ignore()        \n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"cd9o5407a8o0","created":1627972652616,"text":"悬浮提示文字","layout":null,"expandState":"expand"},"children":[{"data":{"id":"cd9o56sif5c0","created":1627972658681,"text":"","note":"~~~python\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nZetCode PyQt5 tutorial \n\nThis example shows a tooltip on \na window and a button.\n\nAuthor: Jan Bodnar\nWebsite: zetcode.com \nLast edited: August 2017\n\"\"\"\n\nimport sys\nfrom PyQt5.QtWidgets import (QWidget, QToolTip, \n    QPushButton, QApplication)\nfrom PyQt5.QtGui import QFont    \n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 设置字体\n        QToolTip.setFont(QFont('SansSerif', 10))\n        # 窗口设置悬浮提示\n        self.setToolTip('This is a <b>QWidget</b> widget')\n\n        btn = QPushButton('Button', self)\n        # 按钮设置悬浮提示\n        btn.setToolTip('This is a <b>QPushButton</b> widget')\n        btn.resize(btn.sizeHint())  # sizeHint()是默认大小\n        btn.move(50, 50)       \n\n        self.setGeometry(300, 300, 300, 200)\n        self.setWindowTitle('Tooltips')    \n        self.show()\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n~~~","layout":null,"expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdahwm2fe8g0","created":1628056619952,"text":"拖放","expandState":"expand"},"children":[{"data":{"id":"cdahwnodyz40","created":1628056623457,"text":"简单拖放","expandState":"expand"},"children":[{"data":{"id":"cdahwpe2ajc0","created":1628056627186,"text":"","note":"~~~python\n\n\"\"\"\n拖拽文本框的文字，释放到按钮上，可以更改按钮显示文字\n\"\"\"\n\nfrom PyQt5.QtWidgets import (QPushButton, QWidget, QLineEdit, QApplication)\nimport sys\n\nclass Button(QPushButton):\n\n    def __init__(self, title, parent):\n        super().__init__(title, parent)\n        self.setAcceptDrops(True)\n\n    # 重写父类拖拽的事件\n    def dragEnterEvent(self, e):\n        if e.mimeData().hasFormat('text/plain'):  # mimeData是个容器，表示可以放在剪切板的数据信息，如文字，图片，文件\n            e.accept()\n        else:\n            e.ignore()\n\n    # 重写松开事件：松开时设置按钮文字\n    def dropEvent(self, e):\n        self.setText(e.mimeData().text())\n\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n        # 创建行编辑器，并设置当编辑器的文字被选中时，可以被拖拽\n        edit = QLineEdit('', self)\n        edit.setDragEnabled(True)\n        edit.move(30, 65)\n\n        button = Button(\"Button\", self)\n        button.move(190, 65)\n\n        self.setWindowTitle('Simple drag and drop')\n        self.setGeometry(300, 300, 300, 150)\n        self.show()\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    app.exec_()\n\n~~~","expandState":"expand"},"children":[]}]}]},{"data":{"id":"cdajg7mxu800","created":1628060976934,"text":"绘图","expandState":"expand"},"children":[{"data":{"id":"cdajg94jw2w0","created":1628060980175,"text":"绘制文本，点","expandState":"expand"},"children":[{"data":{"id":"cdajgcq3vv40","created":1628060988009,"text":" ","note":"~~~python\n\nimport sys\nfrom PyQt5.QtWidgets import QWidget, QApplication\nfrom PyQt5.QtGui import QPainter, QColor, QFont\nfrom PyQt5.QtCore import Qt\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        self.text = \"Лев Николаевич Толстой\\nАнна Каренина\"\n\n        self.setGeometry(300, 300, 280, 170)\n        self.setWindowTitle('Drawing text')\n        self.show()\n\n    # 重写父类方法，自动实现绘画\n    def paintEvent(self, event):\n        # 定义画家\n        qp = QPainter()\n        qp.begin(self)  # 开始\n        self.draw(event, qp)  # 绘画要放在 begin(),end()之间\n        qp.end()\n\n\n    def draw(self, event, qp):\n        # 设置画笔，字体\n        qp.setPen(QColor(168, 34, 3))\n        qp.setFont(QFont('Decorative', 10))\n        # 绘画文本:区域，对齐方式，文本\n        qp.drawText(event.rect(), Qt.AlignCenter, self.text)\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]},{"data":{"id":"cdajwo9g41s0","created":1628062266950,"text":"绘制线条","expandState":"expand"},"children":[{"data":{"id":"cdajwpz509s0","created":1628062270680,"text":"","note":"~~~python\n\nfrom PyQt5.QtWidgets import QWidget, QApplication\nfrom PyQt5.QtGui import QPainter, QPen\nfrom PyQt5.QtCore import Qt\nimport sys\n\nclass Example(QWidget):\n\n    def __init__(self):\n        super().__init__()\n\n        self.initUI()\n\n\n    def initUI(self):\n\n        self.setGeometry(300, 300, 280, 270)\n        self.setWindowTitle('Pen styles')\n        self.show()\n\n\n    def paintEvent(self, e):\n\n        qp = QPainter()\n        qp.begin(self)\n        self.drawLines(qp)\n        qp.end()\n\n\n    def drawLines(self, qp):\n        # 设置画笔：颜色，宽度，画笔格式实线\n        pen = QPen(Qt.black, 2, Qt.SolidLine)\n\n        qp.setPen(pen)\n        # 画线条：起始位置x，y，结束位置x，y\n        qp.drawLine(20, 40, 250, 40)\n\n        pen.setStyle(Qt.DashLine)\n        qp.setPen(pen)\n        qp.drawLine(20, 80, 250, 80)\n\n        pen.setStyle(Qt.DashDotLine)\n        qp.setPen(pen)\n        qp.drawLine(20, 120, 250, 120)\n\n        pen.setStyle(Qt.DotLine)\n        qp.setPen(pen)\n        qp.drawLine(20, 160, 250, 160)\n\n        pen.setStyle(Qt.DashDotDotLine)\n        qp.setPen(pen)\n        qp.drawLine(20, 200, 250, 200)\n\n        pen.setStyle(Qt.CustomDashLine)\n        pen.setDashPattern([1, 4, 5, 4])\n        qp.setPen(pen)\n        qp.drawLine(20, 240, 250, 240)\n\n\nif __name__ == '__main__':\n\n    app = QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n~~~","expandState":"expand"},"children":[]}]}]}]}]},"template":"right","theme":"fresh-blue-compat","version":"1.4.43"}